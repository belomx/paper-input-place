define(["./my-app.js"],function(_myApp){"use strict";function _templateObject_3d716b20789a11e885dda712293f3684(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style include=\"shared-styles\">\n        :host {\n          display: block;\n\n          padding: 10px;\n        }\n      </style>\n\n      <div class=\"card\">\n        <h1>About the Demo</h1>\n        <p>This demo is a Polymer 3.0 app based on the 3.0 version of the starter kit.</p>\n        <p>Although this uses the Polymer 3.0 version of paper-input-place, there is a 2.x/1.x \n        version of the element also.  The API and use is identical. Just install with\n        Bower to use in a Polymer 2.x/1.x project, or with npm or yarn for a 3.x project. \n      See the project README for details.</p>\n        <h2>Builds and Differential Serving</h2>\n        <p>The demo has 3 builds:</p><ul><li>esm-bundled</li><li>es6-bundled</li><li>es5-bundled</li></ul>\n        <p>Since we are serving on a static server, Github's project page function, <a href=\"https://github.com/mlisook/plastic-diff-redirect\">\n        plastic-diff-redirect</a> is used to redirect to the best build for your browser based on the same\n        selection mechanism in prpl-server-node.</p>\n      </div>\n    "]);_templateObject_3d716b20789a11e885dda712293f3684=function(){return data};return data}var MyViewAbout=function(_PolymerElement){babelHelpers.inherits(MyViewAbout,_PolymerElement);function MyViewAbout(){babelHelpers.classCallCheck(this,MyViewAbout);return babelHelpers.possibleConstructorReturn(this,(MyViewAbout.__proto__||Object.getPrototypeOf(MyViewAbout)).apply(this,arguments))}babelHelpers.createClass(MyViewAbout,null,[{key:"template",get:function get(){return(0,_myApp.html)(_templateObject_3d716b20789a11e885dda712293f3684())}}]);return MyViewAbout}(_myApp.PolymerElement);window.customElements.define("my-view-about",MyViewAbout)});